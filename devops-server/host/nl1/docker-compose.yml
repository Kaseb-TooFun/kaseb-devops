version: "3.8"
services:
  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    volumes:
      - /data/gitlab-runner/config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  db:
    image: postgres:12.3
    restart: unless-stopped
    container_name: db
    ports:
      - 5436:5432
    env_file:
      - secret-env
    volumes:
      - /data/db:/var/lib/postgresql/data
    networks:
      - backend

  nginx:
    image: linuxserver/letsencrypt
    container_name: nginx
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - URL=mykaseb.ir
      - SUBDOMAINS=api,log,harness,track
      - ONLY_SUBDOMAINS=true
      - VALIDATION=http
    volumes:
      - /data/nginx:/config
    ports:
      - 443:443
      - 80:80 #optional
    restart: unless-stopped
    networks:
      - publish
    healthcheck:
      test: curl --fail -s localhost || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    depends_on:
      - server
      - tracking-server
      - harness

  server:
    image: registry.gitlab.com/toofun-group/kaseb-server
    container_name: server
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/kaseb
      - SPRING_DATASOURCE_USERNAME=kaseb
      - SERVICES_INFRASTRUCTURE_HARNESS_BASE_URL=http://harness:9090
    env_file:
      - secret-env
    # ports:
    # - 1212:1212
    restart: always
    healthcheck:
      test: curl --fail -s http://localhost:1212/api/v1/verify || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    networks:
      - backend
      - publish
    depends_on:
      - db
    labels:
      dozzle: "show logs"

  tracking-server:
    image: registry.gitlab.com/toofun-group/kaseb-tracking-server
    container_name: tracking-server
    environment:
      - RABBITMQ_DEFAULT_USER=kaseb
      - RABBITMQ_DEFAULT_PASS=pass
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=kaseb
      - SPRING_RABBITMQ_PASSWORD=pass
      - SERVICES_INFRASTRUCTURE_HARNESS_BASE_URL=http://harness:9090
      - SERVICES_INFRASTRUCTURE_HARNESS_USERNAME=user
      - SERVICES_INFRASTRUCTURE_HARNESS_PASSWORD=pass
    env_file:
      - secret-env
    # ports:
    # - 1313:1313
    networks:
      - publish
      - rabbit
    labels:
      dozzle: "show logs"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=kaseb
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - rabbit

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    # ports:
    #   - 9999:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOZZLE_FILTER=label=dozzle
    networks:
      - publish

  harness:
    container_name: harness
    restart: always
    image: actionml/harness:develop
    environment:
      - HARNESS_URI=http://0.0.0.0:9090
      - ELASTICSEARCH_URI=http://proxyelasticsearch:9200
      - MONGO_URI=mongodb://root:aqsd56klsddfh3@mongo:27017
    depends_on:
      - mongo
    networks:
      - publish
      - rabbit
    labels:
      dozzle: "show logs"

  mongo:
    container_name: mongo
    ports:
      - 27017:27017
    restart: always
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=aqsd56klsddfh3
    volumes:
      - /data/mongo/data/db:/data/db
    networks:
      - rabbit

networks:
  publish:
  backend:
  monitor:
  rabbit:
