version: "3.8"
services:
  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    volumes:
      - /data/gitlab-runner/config:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  # squid:
  #   image: sameersbn/squid:3.5.27-2
  #   container_name: squid
  #   ports:
  #     - 8228:3128
  #   volumes:
  #     - /data/squid:/var/spool/squid
  #     - /data/squid/conf:/etc/squid/squid.conf:ro
  #     - /data/squid/squid_users:/etc/squid/squid_users:ro
  #   restart: always

  db:
    image: postgres:12.3
    restart: unless-stopped
    container_name: db
    ports:
      - 5436:5432
    env_file:
      - secret-env
    volumes:
      - /data/db:/var/lib/postgresql/data
    networks:
      - backend

  nginx:
    image: linuxserver/letsencrypt
    container_name: nginx
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - URL=mykaseb.ir
      - SUBDOMAINS=api,app,log,adminer,harness,prom,track
      - ONLY_SUBDOMAINS=true
      - VALIDATION=http
    volumes:
      - /data/nginx:/config
    ports:
      - 443:443
      - 80:80 #optional
    restart: unless-stopped
    networks:
      - publish
    healthcheck:
      test: curl --fail -s localhost || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    depends_on:
      - server
      - prometheus
      - tracking-server
      - harness

  server:
    image: registry.gitlab.com/toofun-group/kaseb-server
    container_name: server
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/kaseb
      - SPRING_DATASOURCE_USERNAME=kaseb
      - SERVICES_INFRASTRUCTURE_HARNESS_BASE_URL=http://harness:9090
    env_file:
      - secret-env
    # ports:
    # - 1212:1212
    restart: always
    healthcheck:
      test: curl --fail -s http://localhost:1212/api/v1/verify || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    networks:
      - backend
      - publish
    depends_on:
      - db
    labels:
      dozzle: "show logs"

  tracking-server:
    image: registry.gitlab.com/toofun-group/kaseb-tracking-server
    container_name: tracking-server
    environment:
      - RABBITMQ_DEFAULT_USER=kaseb
      - RABBITMQ_DEFAULT_PASS=pass
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=kaseb
      - SPRING_RABBITMQ_PASSWORD=pass
      - SERVICES_INFRASTRUCTURE_HARNESS_BASE_URL=http://harness:9090
      - SERVICES_INFRASTRUCTURE_HARNESS_USERNAME=user
      - SERVICES_INFRASTRUCTURE_HARNESS_PASSWORD=pass
    env_file:
      - secret-env
    # ports:
    # - 1313:1313
    networks:
      - publish
      - rabbit
    labels:
      dozzle: "show logs"

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=kaseb
      - RABBITMQ_DEFAULT_PASS=pass
    networks:
      - rabbit

  prometheus:
    image: prom/prometheus:v2.19.2
    container_name: prometheus
    user: "1000:1000"
    volumes:
      - /data/prometheus/config:/etc/prometheus/
      - /data/prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    depends_on:
      - cadvisor
    networks:
      - monitor
      - backend
      - publish

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.37.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    restart: unless-stopped
    networks:
      - monitor

  nodeexporter:
    image: prom/node-exporter:v1.0.1
    container_name: nodeexporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    networks:
      - monitor
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    # ports:
    #   - 9999:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOZZLE_FILTER=label=dozzle
    networks:
      - publish

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    # ports:
    #   - 8080:8080
    networks:
      - publish

  harness:
    container_name: harness
    restart: always
    image: actionml/harness:develop
    environment:
      - HARNESS_URI=http://0.0.0.0:9090
      - ELASTICSEARCH_URI=http://proxyelasticsearch:9200
      - MONGO_URI=mongodb://root:aqsd56klsddfh3@mongo:27017
    depends_on:
      - mongo
    networks:
      - publish
      - rabbit
    labels:
      dozzle: "show logs"

  mongo:
    container_name: mongo
    ports:
      - 27017:27017
    restart: always
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=aqsd56klsddfh3
    volumes:
      - /data/mongo/data/db:/data/db
    networks:
      - rabbit

  telegram:
    container_name: telegram
    image: telegrammessenger/proxy:latest
    ports:
      - 1212:443
    volumes:
      - /data/telegram:/data

networks:
  publish:
  backend:
  monitor:
  rabbit:
