version: "3.8"
services:
  swag:
    image: linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - VALIDATION=http
      - URL=kaseb.xyz
      - ONLY_SUBDOMAINS=true
      - SUBDOMAINS=kibana,cadvisor,node,admin
    volumes:
      - /data/nginx:/config
    ports:
      - 443:443
      - 80:80 #optional
    restart: unless-stopped
    networks:
      - publish
    healthcheck:
      test: curl --fail -s localhost || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    depends_on:
      - kibana
      - pgadmin

  postgres:
    image: postgres:12.3
    restart: unless-stopped
    container_name: postgres
    ports:
      - 5436:5432
    env_file:
      - secret-env
    volumes:
      - /data/postgres:/var/lib/postgresql/data
    networks:
      - postgres
    logging:
      driver: fluentd

  pgbackups3:
    image: amirabbas/postgres-backup-s3
    container_name: pgbackups3
    environment:
      - SCHEDULE=@daily
      - S3_ENDPOINT=https://s3.ir-thr-at1.arvanstorage.com
      - S3_BUCKET=pg-prod-backup
      - S3_PREFIX=backup
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=kaseb
      - POSTGRES_USER=admin
      - POSTGRES_EXTRA_OPTS=--schema=public --blobs
    env_file:
      - secret-env
    networks:
      - postgres
    depends_on:
      - postgres
    logging:
      driver: fluentd

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: unless-stopped
    volumes:
      - /data/pgadmin:/var/lib/pgadmin
    networks:
      - postgres
      - publish
    depends_on:
      - postgres

  mysql:
    image: mysql:5.7
    restart: unless-stopped
    container_name: mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=wordpress
    env_file:
      - secret-env
    volumes:
      - /data/mysql:/var/lib/mysql
    networks:
      - mysql
    logging:
      driver: fluentd

  mybackups3:
    image: schickling/mysql-backup-s3
    container_name: mybackups3
    environment:
      - SCHEDULE=@weekly
      - S3_ENDPOINT=https://s3.ir-thr-at1.arvanstorage.com
      - S3_BUCKET=wordpress-backup
      - S3_PREFIX=backup
      - MYSQLDUMP_DATABASE=wordpress
      - MYSQL_USER=root
      - MYSQL_HOST=mysql
    env_file:
      - secret-env
    networks:
      - mysql
    depends_on:
      - mysql
    logging:
      driver: fluentd

  mongo:
    container_name: mongo
    restart: always
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
    env_file:
      - secret-env
    ports:
      - 27017:27017
    volumes:
      - /data/mongo/data/db:/data/db
    networks:
      - mongo
    logging:
      driver: fluentd

  elasticsearch:
    container_name: elasticsearch
    user: "1000:1000"
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
      - discovery.zen.ping.unicast.hosts=elasticsearch
    env_file:
      - secret-env
    volumes:
      - /data/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - elasticsearch

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.8.1
    environment:
      SERVER_NAME: kibana.kaseb.xyz
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
    env_file:
      - secret-env
    networks:
      - elasticsearch
      - publish

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.37.0
    container_name: cadvisor
    restart: unless-stopped
    # ports:
    #   - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /cgroup:/cgroup:ro
    networks:
      - publish

  nodeexporter:
    image: prom/node-exporter:v1.0.1
    container_name: nodeexporter
    # ports:
    #   - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
    networks:
      - publish

  fluentbit:
    container_name: fluentbit
    image: fluent/fluent-bit:1.5
    env_file:
      - secret-env
    ports:
      - "127.0.0.1:24224:24224"
      - "127.0.0.1:24224:24224/udp"
    volumes:
      - /data/fluent/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
    depends_on:
      - elasticsearch
    networks:
      - elasticsearch

networks:
  postgres:
  mysql:
  elasticsearch:
  mongo:
  publish:
